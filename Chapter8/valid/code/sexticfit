import numpy as np
import matplotlib.pyplot as plt

training_set = np.array([[ 0.7797615298105209, -0.29362152911883277],
                        [ -0.5080331006253846, 0.4494014471326333],
                        [ 0.522694218402106, -0.25987071174881404],
                        [ 0.650132630180212, -0.35426883457169234],
                        [ 0.8266293404872282, -0.2728483362404953],
                        [ -0.5224906686068562, 0.6237959559140642],
                        [ -0.12619473804819448, 0.5033634009569594],
                        [ -0.0988637373928063, 0.2712559665912278],
                        [ 0.4248812551903858, -0.3175334380850314],
                        [ -0.5690356045581071, 0.43677428900483267],
                        [ -0.9967016381779255, 0.024139164053544],
                        [ 0.3828686098733485, -0.2915551769418019],
                        [ 0.9317394285412648, -0.19194282173245802],
                        [ -0.19733204381273817, 0.3682463292070224],
                        [ 0.3228749808343676, -0.12885995232128575],
                        [ -0.657515319891633, 0.4439269824274724],
                        [ 0.5175084418294231, -0.3289809612538649],
                        [ -0.4241910397853985, 0.46997220640788356],
                        [ -0.13194248143632148, 0.4066447111402547],
                        [ 0.27283402905035326, -0.025405351313008348],
                        [ 0.06973509260652344, 0.3307264500754988],
                        [ 0.45208259515449045, -0.30753131530190725],
                        [ 0.06576235817635068, 0.4318855803682294],
                        [ -0.303835599529493, 0.5319520144334944],
                        [ 0.7460331427834836, -0.30752907313935623],
                        [ 0.7997877126917208, -0.4881142088703212],
                        [ -0.6511488700887285, 0.3508442809783256],
                        [ 0.7941871528870217, -0.284334111080831],
                        [ -0.2380788817517676, 0.41091537834144987],
                        [ -0.6889828232543975, 0.22498098128645208],
                        [ 0.3813743673040113, -0.5501524542543794],
                        [ 0.8040796553250058, -0.180104426860371],
                        [ 0.3015494327594572, -0.20518687909692576],
                        [ 0.3991147826866286, -0.4913176319661452],
                        [ -0.8904013422674384, 0.08012048928917254],
                        [ 0.5735541895349023, -0.17633311807476],
                        [ -0.30777092359705516, 0.3662143982605209],
                        [ -0.9545889484514591, 0.03938137383563248],
                        [ 0.17709507415382664, 0.16130152159574634],
                        [ 0.6669989312598894, -0.44112541107123776],
                        [ 0.7043236749163513, -0.3198069814602112],
                        [ -0.310044940270904, 0.4556767867221375],
                        [ 0.16675408493756105, -0.03688748174735504],
                        [ 0.43558180831322346, -0.28421367238701833],
                        [ 0.33288764666148096, -0.2227063186864746],
                        [ -0.46775138789123294, 0.44428210926941925],
                        [ 0.15672235226362474, 0.14526107176164887],
                        [ 0.8440584039244565, -0.3366520968607882],
                        [ 0.27781485509991843, -0.06170876749479426],
                        [ 0.034770479032160795, 0.4910897785131396],
                        [ -0.5196051950613498, 0.3181045388892986],
                        [ -0.18310663812513073, 0.3028118272040595],
                        [ -0.45981603114811365, 0.46631224679988775],
                        [ 0.08401304208260485, 0.2127310716426248],
                        [ -0.9561484458955667, 0.19855538126012595],
                        [ -0.8590531737049021, 0.37819301355128726],
                        [ 0.16391006704766586, 0.25819604202333835],
                        [ 0.2995328093583147, -0.19704279418290785],
                        [ 0.9636961755845288, -0.26359486247837216],
                        [ -0.00209198923206233, 0.3030543427718014],
                        [ 0.2960487861151637, -0.15827718947610142],
                        [ -0.3627907740069809, 0.4112960797601466],
                        [ 0.9188195930440128, -0.23381167091036079],
                        [ 0.9951810702264685, 0.006051418638394664],
                        [ 0.2111778034963676, -0.05334422818977669],
                        [ 0.7286984551994509, -0.44082164859659334],
                        [ -0.64335703415543, 0.5318495138597494],
                        [ -0.04262636447335466, 0.6392976246979802],
                        [ -0.2721505652549123, 0.38213325833219675],
                        [ -0.5260572881673935, 0.3499696033584166],
                        [ -0.12045264374585796, 0.4183520542902612],
                        [ 0.5234973431713392, -0.2849856043487469],
                        [ -0.411780548883643, 0.3769699467726948],
                        [ -0.7993302860583955, 0.2987552858344515],
                        [ -0.8338154947173315, 0.32181428641660575],
                        [ -0.2306908389823341, 0.3247548651485818],
                        [ -0.16056621214917155, 0.29911502989416994],
                        [ 0.9340954814219047, 0.13383426166089335],
                        [ -0.626447523860924, 0.38338230781952737],
                        [ -0.4867591203090822, 0.3985031095717663]])
test_set = np.array([[ 0.2246277554246654, -0.19197863376580368],
                    [ -0.5253080254968088, 0.22678966547061144],
                    [ 0.44725768105326713, -0.36172357750679013],
                    [ -0.5806144118433019, 0.327635891646161],
                    [ 0.592977394673968, -0.3017676124960429],
                    [ -0.11063737472301649, 0.3182922705137913],
                    [ 0.03309380000430262, 0.28680760291127116],
                    [ 0.05220260631368867, 0.289311838409019],
                    [ -0.3696911872918427, 0.27740782186009016],
                    [ 0.581313870171849, -0.48842403451900185],
                    [ 0.10039176708659214, -0.009405167351048932],
                    [ -0.9685921472053525, -0.05174278182442416],
                    [ -0.9954808990819313, -0.042415167928614744],
                    [ -0.6863401288480921, 0.44958502222633545],
                    [ -0.576800892486889, 0.26693933886328935],
                    [ 0.26392152801723756, -0.257045561593101],
                    [ 0.3514673070466292, -0.1487467899694381],
                    [ 0.8984966579141653, -0.1768752963458952],
                    [ 0.21695772565502613, -0.07185129867702006],
                    [ 0.35380522677443604, -0.31981047823802955]])
x = training_set[:,0]
y = training_set[:,1]
x_test = test_set[:,0]
y_test = test_set[:,1]

plt.ion()
plt.scatter(x,y, color='b', marker='o')
plt.scatter(x_test,y_test, color='r', marker='x')
plt.axis([-1,1,-0.7,0.7])
plt.show()

d = 25
training_error = np.zeros(d)
test_error = np.zeros(d)
for n in range(1,d+1):
    f = np.polyfit(x,y,n)
    training_error[n-1] = np.linalg.norm(np.poly1d(f)(x) - y)/np.linalg.norm(y)
    test_error[n-1] = np.linalg.norm(np.poly1d(f)(x_test) - y_test)/np.linalg.norm(y_test)

print(test_error[2], "\n")
plt.ion()
plt.plot(range(1,d+1), training_error, 'b-o', label = 'Train')
plt.plot(range(1,d+1), test_error,  'r-x', label = 'Test')
plt.xlabel('Degree')
plt.ylabel('Relative RMS error')
plt.legend(['Training Set', 'Test Set'])
plt.show()
